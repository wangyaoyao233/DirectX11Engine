/*system header*/
#include "Main.h"
#include "Renderer.h"
#include "Manager.h"
/*tools header*/
/*scenes header*/
/*gameobjects header*/
/*self header*/


//	XMFLOAT3 example;
//	//赋值, XMFLOAT3只存储值
//	example = XMFLOAT3(0.0f, 0.0f, 0.0f);
//
//	//计算, XMVECTOR类型才可以计算
//	XMVECTOR cal = XMLoadFloat3(&example);//载入XMFLOAT3的值
//	cal += XMVectorSet(1.0f, 1.0f, 1.0f, 0.0f);
//	//将 XMVECTOR 赋值给 XMFLOAT3
//	XMStoreFloat3(&example, cal);
//
//	//======================
//	XMFLOAT4X4 world;
//	XMMATRIX I = XMMatrixIdentity();
//	//将矩阵存储为XMFLOAT4X4
//	XMStoreFloat4x4(&world, I);
//	//将XMFLOAT4X4读入矩阵
//	XMMATRIX matrix = XMLoadFloat4x4(&world);
//
//	reinterpret_cast<D3DXMATRIX*>(&world);


2020

10.1
1. 完成Windows窗口程序框架
2. DirectX11初始化
3. 创建D3D设备 和 D3D设备上下文
4. DXGI初始化: DXGI 1.2 和 DXGI 1.1
5. 获取DXGI buffer, 创建渲染目标视图 ID3D11RenderTargetView
6. 创建深度/模板视图 ID3D11DepthStencilView
7. 在OM阶段, 设置渲染目标
8. 在RS阶段, 设置视口区域 Viewports
9. 顶点着色器创建函数
10. 像素着色器创建函数
11. 创建常量缓冲区 Constant Buffer: World, View, Projection
12. Constant Buffer的更新函数
13. Camera完成

10.2
1. 光照系统
2. 平行光
3. 点光
4. 聚光灯
5. 光栅化状态
6. D2D文字渲染

10.3
1. 纹理采样
2. 纹理读取
3. 设置着色器资源视图
4. 2DShader
5. 光照Shader

10.4
1. 光照类C++
2. 基于欧拉角的Transform类封装

10.5
1. RenderState类

11.2
1. 添加Scene基类
2. 修改Manager, 使用画面迁移
3. 添加CGame场景


11.3
1. 添加GameTimer类, 修改main
2. 添加AnimationModel类

11.10
1. 修复问题: plaeyr忘记添加shader和vertexLayout
2. 问题: 模型没有texture     --fixed
	可能原因: 没有添加光线  
3. 问题: 模型没有material    --fixed

11.20
1. 添加imgui
2. 测试利用imgui修改位置
	